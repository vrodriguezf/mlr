# DO NOT CHANGE the "init" and "install" sections below

# Download script file from GitHub
init:
  - ps:   |
          $ErrorActionPreference = "Stop"
          Invoke-WebRequest https://raw.githubusercontent.com/rwinlib/base/master/scripts/appveyor-tool.ps1 -OutFile "..\appveyor-tool.ps1"
          Import-Module '..\appveyor-tool.ps1'
install:
  - ps: Bootstrap
  - cmd: R -q -e "writeLines('options(repos = \'https://cloud.r-project.org\')', '~/.Rprofile')"
  - cmd: R -q -e "getOption('repos')"
  - cmd: rm -rf C:\RLibrary\00LOCK-*
  - cmd: R -q -e "if (!requireNamespace('remotes')) install.packages('remotes')"
  - cmd: R -q -e "if (!requireNamespace('curl')) install.packages('curl')"
  - cmd: R -q -e "if (!requireNamespace('BiocManager')) install.packages('BiocManager')"
  - cmd: R -q -e "if (!requireNamespace('genefilter')) BiocManager::install('genefilter')"
  - cmd: R -q -e "remotes::install_github('ropenscilabs/tic'); tic::prepare_all_stages()"


cache:
  # - C:\RLibrary
  - C:\Program Files\Pandoc\
  - C:\miktex

before_build: R -q -e "tic::before_install()"
build_script: R -q -e "tic::install()"
# after_build: R -q -e "tic::after_install()"
before_test:
 - ps: >-
      if (-Not (Test-Path "C:\Program Files\Pandoc\")) {
        cinst pandoc
      }
 - ps: $env:Path += ";C:\Program Files\Pandoc\"
 - pandoc -v
 # Install miktex to get pdflatex, if we don't get it from the cache
 - if not exist c:\miktex\texmfs\install\miktex\bin\pdflatex.exe appveyor DownloadFile https://miktex.org/download/ctan/systems/win32/miktex/setup/windows-x86/miktex-portable-2.9.6753.exe
 - if not exist c:\miktex\texmfs\install\miktex\bin\pdflatex.exe 7z x miktex-portable-2.9.6753.exe -oC:\miktex >NUL
 - set "PATH=%PATH%;c:\miktex\texmfs\install\miktex\bin"
 # autoinstall latex packages (0=no, 1=autoinstall, 2=ask)
 # this adds this to the registry!
 - initexmf --set-config-value "[MPM]AutoInstall=1"
 - R -q -e "tic::before_script()"
test_script: R -q -e "tic::script()"
before_deploy: R -q -e "tic::before_deploy()"
deploy_script: R -q -e "tic::deploy()"
after_deploy: R -q -e "tic::after_deploy()"
on_finish: R -q -e "tic::after_script()"

# Adapt as necessary starting from here

platform: x64
image: Visual Studio 2017

environment:
  GITHUB_PAT:
    secure: V55U9UnApb09OaMrW7myVV2Rnfb1RDeWEjFtfC49qu7Nm/1yqzYTOv0gu88UNVCi
  R_ARCH: x64
  RCMDCHECK: TRUE
  _R_CHECK_FORCE_SUGGESTS_: false
  WARMUPPKGS: 'roxygen2 pander mlrMBO purrr mlbench mldr RWeka RWekajars knitr dplyr ggplot2 ranger randomForest kernlab igraph rjson rmarkdown xgboost xml2 testthat'
